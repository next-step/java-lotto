# 절차

돈 -> 로또발급 -> 당첨번호, 보너스번호 입력 -> 당첨개수 확인 -> 당첨금확인 -> 수익률 계산

- 나중에 로또티켓 리스트를 로또번들 객체로 감싸기 => 보류. 너무 과한거 같음

-----------------------------
#진행



-----------------------------
#구현완료

1. 구매 가능한 장수 판단
- 1000원 미만 : error
- 1000원 : 1장
- 1500원 : 1장

6. 수익률 계산
- 총 당첨금 / 구입비용

2-1. 랜덤번호 생성
- 6개의 랜덤번호를 생성 :: 전달받은 사이즈 만큼 추가해서 반환
    => 일단OK / 나중에 LottoTicket 추가되면 리팩토링 필요

- 전달받은 티켓에 담아서 반환 => 요구사항 아직 아님
  * 빈 객체 생성해서 반환

* 생성기준
 - 1-45사이 => OK
 - 랜덤번호 => OK
 - 정렬해서 반환 => OK


2-2. 로또N장 발행
- 2. 로또 한장 발행을 N번 반복
> 로또PACK이라는 곳에 담아서? 전달?



3. 당첨번호 + 보너스번호 발행
- 입력받은 6개의 당첨번호 > 담아서 반환
- 보너스 번호도 담아서 반환
* 생성기준
 - 1-45사이 => 검증됨
 - 중복X => 나중에
 - 정렬반환 => 검증됨

 ->> 당첨번호 저장할 객체 만들기
 ->> 보너스번호도 받는 객체 만들기


 4. 당첨개수 확인 + 보너스 당첨여부 확인 => 확인
 - 카운트가 5이면 보너스 당첨 여부를 확인 => 확인

     4-1. 당첨개수별 순위 확인 => Rank 객체.  확인
     - 당첨개수별로 정해진 순위를 반환한다

 - 순위별 카운트를 저장 => 요거 진행해야함

 *** 순위별 당첨개수를 저장해야한다.
 >> 일단 Map으로 구현해보자 // get,set이 일어나는데,, 배열말곤 다 똑같을거 같다.


5. 총 당첨금 계산
- 순위별 당첨개수 * 순위별 상금 => 총 당첨금 반환

#기타 기능구현
- 숫자중복 구현
- 보너스번호 중복 구현
- 로또 생성시 번호 중복 확인하기